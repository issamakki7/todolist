{"version":3,"sources":["components/ToDoItem.js","components/InputArea.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoItem","props","onClick","onChecked","id","text","InputArea","useState","inputText","setInputText","className","onChange","event","newValue","target","value","type","onAdd","App","items","setItems","deleteItem","prevItems","filter","item","index","map","todoItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAceA,MAZf,SAAkBC,GAChB,OACE,qBACEC,QAAS,WACPD,EAAME,UAAUF,EAAMG,KAF1B,SAKE,6BAAKH,EAAMI,UCeEC,MAtBnB,SAAmBL,GAAQ,IAAD,EAEYM,mBAAS,IAFrB,mBAEfC,EAFe,KAEJC,EAFI,KAStB,OACI,sBAAKC,UAAU,OAAf,UACA,uBAAOC,SAPX,SAAsBC,GAClB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BN,EAAaI,IAKkBG,KAAK,OAAOD,MAAOP,IAClD,wBAAQN,QAAS,WACbD,EAAMgB,MAAMT,GACZC,EAAa,KAFjB,SAIA,6CCyBOS,MAvCf,WAAgB,IAAD,EACaX,mBAAS,IADtB,mBACNY,EADM,KACCC,EADD,KASb,SAASC,EAAWjB,GAClBgB,GAAS,SAAAE,GACP,OAAOA,EAAUC,QAAO,SAACC,EAAMC,GAC7B,OAAOA,IAAUrB,QAKvB,OACE,sBAAKM,UAAU,YAAf,UACE,qBAAKA,UAAU,UAAf,SACE,8CAEF,cAAC,EAAD,CAAWO,MAnBf,SAAiBT,GACfY,GAAS,SAAAE,GACP,MAAM,GAAN,mBAAWA,GAAX,CAAsBd,UAkBtB,8BACE,6BACGW,EAAMO,KAAI,SAACC,EAAUF,GAAX,OACT,cAAC,EAAD,CAEErB,GAAIqB,EACJpB,KAAMsB,EACNxB,UAAWkB,GAHNI,cCnBJG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.050c5424.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction ToDoItem(props) {\r\n  return (\r\n    <div\r\n      onClick={() => {\r\n        props.onChecked(props.id);\r\n      }}\r\n    >\r\n      <li>{props.text}</li>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ToDoItem;\r\n","import React , {useState} from \"react\";\r\n\r\nfunction InputArea(props) {\r\n\r\n    const [inputText, setInputText] = useState(\"\");\r\n\r\n    function handleChange(event) {\r\n        const newValue = event.target.value;\r\n        setInputText(newValue);\r\n    }\r\n    \r\n    return (\r\n        <div className=\"form\">\r\n        <input onChange={handleChange} type=\"text\" value={inputText} />\r\n        <button onClick={() => {\r\n            props.onAdd(inputText);\r\n            setInputText(\"\");\r\n        }}>\r\n        <span>Add</span>\r\n        </button>\r\n        </div>\r\n        );\r\n    }\r\n    \r\n    export default InputArea;\r\n    ","import React, { useState } from \"react\";\nimport ToDoItem from \"./components/ToDoItem\";\nimport InputArea from \"./components/InputArea\";\n\nfunction App() {\n  const [items, setItems] = useState([]);\n\n  function addItem(inputText) {\n    setItems(prevItems => {\n      return [...prevItems, inputText];\n    });\n  }\n\n  function deleteItem(id) {\n    setItems(prevItems => {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <InputArea onAdd={addItem} />\n      <div>\n        <ul>\n          {items.map((todoItem, index) => (\n            <ToDoItem\n              key={index}\n              id={index}\n              text={todoItem}\n              onChecked={deleteItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}